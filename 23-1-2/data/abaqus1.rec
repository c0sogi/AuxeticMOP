# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=85, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 0.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 3.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 3.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(0.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(0.0, 6.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(0.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(0.0, 9.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(0.0, 9.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(0.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(0.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(0.0, 12.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(3.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(3.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(3.0, 3.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(3.0, 3.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(3.0, 3.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(3.0, 3.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(3.0, 3.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(3.0, 6.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(3.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(3.0, 6.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(3.0, 6.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(3.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(3.0, 9.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(3.0, 9.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(3.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(3.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(3.0, 12.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(6.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(6.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(6.0, 0.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(6.0, 3.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(6.0, 3.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(6.0, 3.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(6.0, 3.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(6.0, 3.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-39-1', )
    , vector=(6.0, 6.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-40-1', )
    , vector=(6.0, 6.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-41-1', )
    , vector=(6.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-42-1', )
    , vector=(6.0, 6.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-43-1', )
    , vector=(6.0, 6.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-44-1', )
    , vector=(6.0, 9.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-45-1', )
    , vector=(6.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-46-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-47-1', )
    , vector=(6.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-48-1', )
    , vector=(6.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-49-1', )
    , vector=(9.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-50-1', )
    , vector=(9.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-51-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-52-1', )
    , vector=(9.0, 0.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-53-1', )
    , vector=(9.0, 3.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-54-1', )
    , vector=(9.0, 3.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-55-1', )
    , vector=(9.0, 3.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-56-1', )
    , vector=(9.0, 3.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-57-1', )
    , vector=(9.0, 6.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-58-1', )
    , vector=(9.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-59-1', )
    , vector=(9.0, 6.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-60-1', )
    , vector=(9.0, 9.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-61-1', )
    , vector=(9.0, 9.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-62-1', )
    , vector=(9.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-63-1', )
    , vector=(9.0, 9.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-64-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-65-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-66-1', )
    , vector=(9.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-67-1', )
    , vector=(9.0, 12.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-68-1', )
    , vector=(12.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-69-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-70-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-71-1', )
    , vector=(12.0, 0.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-72-1', )
    , vector=(12.0, 0.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-73-1', )
    , vector=(12.0, 3.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-74-1', )
    , vector=(12.0, 3.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-75-1', )
    , vector=(12.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-76-1', )
    , vector=(12.0, 6.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-77-1', )
    , vector=(12.0, 9.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-78-1', )
    , vector=(12.0, 9.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-79-1', )
    , vector=(12.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-80-1', )
    , vector=(12.0, 9.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-81-1', )
    , vector=(12.0, 9.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-82-1', )
    , vector=(12.0, 12.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-83-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-84-1', )
    , vector=(12.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-85-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-2']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-3']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-4']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-6', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-5']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-6-1']], 
    keepIntersections=ON, name='Merge-7', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-6']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-7-1']], 
    keepIntersections=ON, name='Merge-8', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-7']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-39-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-40-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-8-1']], 
    keepIntersections=ON, name='Merge-9', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-8']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-41-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-42-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-43-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-44-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-45-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-9-1']], 
    keepIntersections=ON, name='Merge-10', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-9']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-46-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-47-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-48-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-49-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-50-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-10-1']], 
    keepIntersections=ON, name='Merge-11', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-10']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-51-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-52-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-53-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-54-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-55-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-11-1']], 
    keepIntersections=ON, name='Merge-12', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-11']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-56-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-57-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-58-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-59-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-60-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-12-1']], 
    keepIntersections=ON, name='Merge-13', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-12']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-61-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-62-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-63-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-64-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-65-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-13-1']], 
    keepIntersections=ON, name='Merge-14', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-13']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-66-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-67-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-68-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-69-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-70-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-14-1']], 
    keepIntersections=ON, name='Merge-15', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-14']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-71-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-72-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-73-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-74-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-75-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-76-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-77-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-78-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-79-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-80-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-81-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-82-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-83-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-84-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-85-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-15-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-15']
mdb.models['Model-1'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-1'].parts['Merge-1'].generateMesh()
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-1'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[202], ))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-1'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[204], ))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-1'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[206], ))
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-1'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-1'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:10 #3fffff ]', ), ))
mdb.models['Model-1'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-1'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#88000000 #8 #40000000 #24 #0 #4440000 #0', ' #140 #4444220 ]', ), 
    ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#88000000 #8 #40000000 #24 #0 #4440000 #0', ' #140 #4444220 ]', ), 
    ), name='FY')
mdb.models['Model-1'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:7 #9000000 #8888001 #21042221 #42084 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:7 #9000000 #8888001 #21042221 #42084 ]', ), ), name='FX')
mdb.models['Model-1'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#20000800 #20000000 #10000 #2001 #8000 #2 #0:2', 
    ' #10080 #4 #8000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#20000800 #20000000 #10000 #2001 #8000 #2 #0:2', 
    ' #10080 #4 #8000 ]', ), ), name='FZ')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#44225209 #8484 ]', ), ), name='FX0')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#40 #1220100 #0 #22000000 #2 #5000 #2200', 
    ' #12000000 #2 #0 #84000 ]', ), ), name='FY0')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #4004200 #800 #800000 #808 #10000 #1040080', ' #0 #8 #200000 ]', 
    ), ), name='FZ0')
mdb.models['Model-1'].Coupling(controlPoint=
    mdb.models['Model-1'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-1'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['FY0'])
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['FZ0'])
mdb.models['Model-1'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['FX0'])
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-1'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-2')
del mdb.models['Model-1']
del mdb.jobs['Job-1-1']
mdb.models['Model-2'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-2'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-2'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-2'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-2'].sketches['__profile__'])
del mdb.models['Model-2'].sketches['__profile__']
mdb.models['Model-2'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-2'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-2'].parts['Part-1'])
mdb.models['Model-2'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=96, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(0.0, 3.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(0.0, 3.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(0.0, 3.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(0.0, 3.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(0.0, 3.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(0.0, 6.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(0.0, 6.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(0.0, 6.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(0.0, 6.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(0.0, 9.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(0.0, 9.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(0.0, 9.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(0.0, 9.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(0.0, 12.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(0.0, 12.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(0.0, 12.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(0.0, 12.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(0.0, 12.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(3.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(3.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(3.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(3.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(3.0, 3.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(3.0, 3.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(3.0, 3.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(3.0, 3.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(3.0, 3.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(3.0, 6.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(3.0, 6.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(3.0, 6.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(3.0, 6.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(3.0, 9.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(3.0, 9.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-39-1', )
    , vector=(3.0, 9.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-40-1', )
    , vector=(3.0, 9.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-41-1', )
    , vector=(3.0, 12.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-42-1', )
    , vector=(3.0, 12.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-43-1', )
    , vector=(3.0, 12.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-44-1', )
    , vector=(3.0, 12.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-45-1', )
    , vector=(3.0, 12.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-46-1', )
    , vector=(6.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-47-1', )
    , vector=(6.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-48-1', )
    , vector=(6.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-49-1', )
    , vector=(6.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-50-1', )
    , vector=(6.0, 3.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-51-1', )
    , vector=(6.0, 3.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-52-1', )
    , vector=(6.0, 6.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-53-1', )
    , vector=(6.0, 6.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-54-1', )
    , vector=(6.0, 9.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-55-1', )
    , vector=(6.0, 9.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-56-1', )
    , vector=(6.0, 9.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-57-1', )
    , vector=(6.0, 12.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-58-1', )
    , vector=(6.0, 12.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-59-1', )
    , vector=(9.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-60-1', )
    , vector=(9.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-61-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-62-1', )
    , vector=(9.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-63-1', )
    , vector=(9.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-64-1', )
    , vector=(9.0, 3.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-65-1', )
    , vector=(9.0, 3.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-66-1', )
    , vector=(9.0, 3.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-67-1', )
    , vector=(9.0, 3.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-68-1', )
    , vector=(9.0, 6.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-69-1', )
    , vector=(9.0, 6.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-70-1', )
    , vector=(9.0, 6.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-71-1', )
    , vector=(9.0, 9.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-72-1', )
    , vector=(9.0, 9.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-73-1', )
    , vector=(9.0, 9.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-74-1', )
    , vector=(9.0, 9.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-75-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-76-1', )
    , vector=(9.0, 12.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-77-1', )
    , vector=(9.0, 12.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-78-1', )
    , vector=(12.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-79-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-80-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-81-1', )
    , vector=(12.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-82-1', )
    , vector=(12.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-83-1', )
    , vector=(12.0, 3.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-84-1', )
    , vector=(12.0, 3.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-85-1', )
    , vector=(12.0, 3.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-86-1', )
    , vector=(12.0, 6.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-87-1', )
    , vector=(12.0, 6.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-88-1', )
    , vector=(12.0, 6.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-89-1', )
    , vector=(12.0, 9.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-90-1', )
    , vector=(12.0, 9.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-91-1', )
    , vector=(12.0, 9.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-92-1', )
    , vector=(12.0, 9.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-93-1', )
    , vector=(12.0, 12.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-94-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-95-1', )
    , vector=(12.0, 12.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-96-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-2']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-3']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-4']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-6', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-5']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-6-1']], 
    keepIntersections=ON, name='Merge-7', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-6']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-39-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-40-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-41-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-42-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-7-1']], 
    keepIntersections=ON, name='Merge-8', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-7']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-43-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-44-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-45-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-46-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-47-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-48-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-8-1']], 
    keepIntersections=ON, name='Merge-9', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-8']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-49-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-50-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-51-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-52-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-53-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-54-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-9-1']], 
    keepIntersections=ON, name='Merge-10', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-9']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-55-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-56-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-57-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-58-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-59-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-60-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-10-1']], 
    keepIntersections=ON, name='Merge-11', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-10']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-61-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-62-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-63-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-64-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-65-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-66-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-11-1']], 
    keepIntersections=ON, name='Merge-12', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-11']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-67-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-68-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-69-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-70-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-71-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-72-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-12-1']], 
    keepIntersections=ON, name='Merge-13', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-12']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-73-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-74-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-75-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-76-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-77-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-78-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-13-1']], 
    keepIntersections=ON, name='Merge-14', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-13']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-79-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-80-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-81-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-82-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-83-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-84-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-14-1']], 
    keepIntersections=ON, name='Merge-15', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-14']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-85-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-86-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-87-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-88-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-89-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-90-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-91-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-92-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-93-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-94-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-95-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-96-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-15-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-15']
mdb.models['Model-2'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-2'].parts['Merge-1'].generateMesh()
mdb.models['Model-2'].Material(name='Material-1')
mdb.models['Model-2'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-2'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #200000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #400000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #800000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0:2 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000000 ]', ), )), sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].rootAssembly.regenerate()
mdb.models['Model-2'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-2'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-2'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-2'].rootAssembly.referencePoints[224], ))
mdb.models['Model-2'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-2'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-2'].rootAssembly.referencePoints[226], ))
mdb.models['Model-2'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-2'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-2'].rootAssembly.referencePoints[228], ))
mdb.models['Model-2'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-2'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-2'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-2'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-2'].ContactProperty('IntProp-1')
mdb.models['Model-2'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-2'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:12 ]', ), ))
mdb.models['Model-2'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-2'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-2'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #22222 #0 #1200 #444 #80000000 #4', ' #48000000 #2 #222200 ]', 
    ), ))
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #22222 #0 #1200 #444 #80000000 #4', ' #48000000 #2 #222200 ]', 
    ), ), name='FY')
mdb.models['Model-2'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:8 #800000 #84228000 #88444410 #10422088 ]', ), ))
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:8 #800000 #84228000 #88444410 #10422088 ]', ), ), name='FX')
mdb.models['Model-2'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8000200 #800200 #4000008 #20001000 #40 #10 #1100', 
    ' #400201 #10080080 #800100 #10000800 #40004000 ]', ), ))
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8000200 #800200 #4000008 #20001000 #40 #10 #1100', 
    ' #400201 #10080080 #800100 #10000800 #40004000 ]', ), ), name='FZ')
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#92622489 #1112508 #11111 ]', ), ), name='FX0')
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#48902 #40000000 #12000000 #100 #80000000 #90000 #480080', 
    ' #22200000 #1000000 #8400000 #21 ]', ), ), name='FY0')
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#44 #80000000 #100000 #20 #10008000 #4200000 #1000010', 
    ' #0 #2000000 ]', ), ), name='FZ0')
mdb.models['Model-2'].Coupling(controlPoint=
    mdb.models['Model-2'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-2'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-2'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-2'].rootAssembly.sets['FY0'])
mdb.models['Model-2'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-2'].rootAssembly.sets['FZ0'])
mdb.models['Model-2'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-2'].rootAssembly.sets['FX0'])
mdb.models['Model-2'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-2'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-2', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-2'].waitForCompletion()
