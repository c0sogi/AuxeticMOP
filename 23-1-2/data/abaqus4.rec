# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=38, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(3.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(3.0, 0.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(3.0, 3.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(3.0, 3.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(3.0, 6.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(3.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(6.0, 0.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(6.0, 3.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(6.0, 3.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(6.0, 6.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(6.0, 6.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(6.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(6.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(6.0, 9.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(6.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(6.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(9.0, 6.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(9.0, 6.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(9.0, 6.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(9.0, 9.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(9.0, 9.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(9.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(9.0, 12.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(9.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(9.0, 12.0, 12.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(12.0, 9.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(12.0, 9.0, 3.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(12.0, 9.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(12.0, 9.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(12.0, 12.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(12.0, 12.0, 9.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-2']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-3']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-4']
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-1'].parts['Merge-5']
mdb.models['Model-1'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-1'].parts['Merge-1'].generateMesh()
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-1'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[88], ))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-1'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[90], ))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-1'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[92], ))
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-1'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-1'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #7f ]', ), ))
mdb.models['Model-1'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-1'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8000000 #0 #28011120 #44400002 #840008 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8000000 #0 #28011120 #44400002 #840008 ]', ), ), name='FY')
mdb.models['Model-1'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #88800000 #40004210 #8 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #88800000 #40004210 #8 ]', ), ), name='FX')
mdb.models['Model-1'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #2000000 #200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #2000000 #200000 ]', ), ), name='FZ')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), ), name='FX0')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#880004 #2000000 ]', ), ), name='FY0')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #800 #80008 #8008 #40:2 ]', ), ), name='FZ0')
mdb.models['Model-1'].Coupling(controlPoint=
    mdb.models['Model-1'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-1'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['FY0'])
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['FZ0'])
mdb.models['Model-1'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['FX0'])
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-1'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-2')
del mdb.models['Model-1']
del mdb.jobs['Job-1-1']
mdb.models['Model-2'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-2'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-2'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-2'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-2'].sketches['__profile__'])
del mdb.models['Model-2'].sketches['__profile__']
mdb.models['Model-2'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-2'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-2'].parts['Part-1'])
mdb.models['Model-2'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=32, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 6.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 9.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 9.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(0.0, 12.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(0.0, 12.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(0.0, 12.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(0.0, 12.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(3.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(3.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(3.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(3.0, 3.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(3.0, 6.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(3.0, 6.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(3.0, 12.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(6.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(6.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(6.0, 6.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(6.0, 6.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(6.0, 9.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(9.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(9.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(9.0, 9.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(12.0, 0.0, 0.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(12.0, 0.0, 9.0))
mdb.models['Model-2'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(12.0, 0.0, 12.0))
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-2']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-3']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-4']
mdb.models['Model-2'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-2'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-2'].parts['Merge-5']
mdb.models['Model-2'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-2'].parts['Merge-1'].generateMesh()
mdb.models['Model-2'].Material(name='Material-1')
mdb.models['Model-2'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-2'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-2'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-2'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-2'].rootAssembly.regenerate()
mdb.models['Model-2'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-2'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-2'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-2'].rootAssembly.referencePoints[76], ))
mdb.models['Model-2'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-2'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-2'].rootAssembly.referencePoints[78], ))
mdb.models['Model-2'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-2'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-2'].rootAssembly.referencePoints[80], ))
mdb.models['Model-2'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-2'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-2'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-2'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-2'].ContactProperty('IntProp-1')
mdb.models['Model-2'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-2'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:4 #3ffffff ]', ), ))
mdb.models['Model-2'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-2'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-2'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#21080002 #0 #42010000 ]', ), ))
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#21080002 #0 #42010000 ]', ), ), name='FY')
mdb.models['Model-2'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #8440000 #21 ]', ), ))
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #8440000 #21 ]', ), ), name='FX')
mdb.models['Model-2'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #100000 #2000 ]', ), ))
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #100000 #2000 ]', ), ), name='FZ')
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10842221 #22 ]', ), ), name='FX0')
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #44221088 #400000 #10880000 #21042 ]', ), ), name='FY0')
mdb.models['Model-2'].rootAssembly.Set(faces=
    mdb.models['Model-2'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10 #800000 #4100 #10022 #2000100 ]', ), ), name='FZ0')
mdb.models['Model-2'].Coupling(controlPoint=
    mdb.models['Model-2'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-2'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-2'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-2'].rootAssembly.sets['FY0'])
mdb.models['Model-2'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-2'].rootAssembly.sets['FZ0'])
mdb.models['Model-2'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-2'].rootAssembly.sets['FX0'])
mdb.models['Model-2'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-2'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-2', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-2'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-3')
del mdb.models['Model-2']
del mdb.jobs['Job-1-2']
mdb.models['Model-3'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-3'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-3'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-3'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-3'].sketches['__profile__'])
del mdb.models['Model-3'].sketches['__profile__']
mdb.models['Model-3'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-3'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-3'].parts['Part-1'])
mdb.models['Model-3'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=22, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 9.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 12.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 3.0, 9.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 6.0, 9.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 9.0, 6.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(0.0, 9.0, 9.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(0.0, 12.0, 6.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(3.0, 0.0, 12.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(3.0, 9.0, 9.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(3.0, 9.0, 12.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(3.0, 12.0, 6.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(3.0, 12.0, 9.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(3.0, 12.0, 12.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(6.0, 0.0, 12.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(6.0, 12.0, 6.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(9.0, 12.0, 0.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(12.0, 12.0, 0.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(12.0, 12.0, 3.0))
mdb.models['Model-3'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-3'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-3'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-3'].parts['Merge-2']
mdb.models['Model-3'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-3'].parts['Merge-3']
mdb.models['Model-3'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-3'].parts['Merge-4']
mdb.models['Model-3'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-3'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-3'].parts['Merge-5']
mdb.models['Model-3'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-3'].parts['Merge-1'].generateMesh()
mdb.models['Model-3'].Material(name='Material-1')
mdb.models['Model-3'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-3'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-3'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-3'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-3'].rootAssembly.regenerate()
mdb.models['Model-3'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-3'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-3'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-3'].rootAssembly.referencePoints[56], ))
mdb.models['Model-3'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-3'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-3'].rootAssembly.referencePoints[58], ))
mdb.models['Model-3'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-3'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-3'].rootAssembly.referencePoints[60], ))
mdb.models['Model-3'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-3'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-3'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-3'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-3'].ContactProperty('IntProp-1')
mdb.models['Model-3'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-3'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:3 #7ff ]', ), ))
mdb.models['Model-3'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-3'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-3'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#2000000 #12000480 #8222002 #41 ]', ), ))
mdb.models['Model-3'].rootAssembly.Set(faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#2000000 #12000480 #8222002 #41 ]', ), ), name='FY')
mdb.models['Model-3'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #444000 ]', ), ))
mdb.models['Model-3'].rootAssembly.Set(faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #444000 ]', ), ), name='FX')
mdb.models['Model-3'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#420000 #20000 #410 ]', ), ))
mdb.models['Model-3'].rootAssembly.Set(faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#420000 #20000 #410 ]', ), ), name='FZ')
mdb.models['Model-3'].rootAssembly.Set(faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#11004111 #1 ]', ), ), name='FX0')
mdb.models['Model-3'].rootAssembly.Set(faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#210004 #0 #200 ]', ), ), name='FY0')
mdb.models['Model-3'].rootAssembly.Set(faces=
    mdb.models['Model-3'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #80000000 #2000000 #10 ]', ), ), name='FZ0')
mdb.models['Model-3'].Coupling(controlPoint=
    mdb.models['Model-3'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-3'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-3'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-3'].rootAssembly.sets['FY0'])
mdb.models['Model-3'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-3'].rootAssembly.sets['FZ0'])
mdb.models['Model-3'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-3'].rootAssembly.sets['FX0'])
mdb.models['Model-3'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-3'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-3', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-3', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-3'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-3'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-4')
del mdb.models['Model-3']
del mdb.jobs['Job-1-3']
mdb.models['Model-4'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-4'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-4'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-4'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-4'].sketches['__profile__'])
del mdb.models['Model-4'].sketches['__profile__']
mdb.models['Model-4'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-4'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-4'].parts['Part-1'])
mdb.models['Model-4'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=38, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(3.0, 0.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(3.0, 3.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(3.0, 3.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(3.0, 9.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(6.0, 0.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(6.0, 3.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(6.0, 3.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(6.0, 3.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(6.0, 6.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(6.0, 6.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(6.0, 6.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(6.0, 6.0, 12.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(6.0, 9.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(6.0, 9.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(6.0, 9.0, 12.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(6.0, 12.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(6.0, 12.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(6.0, 12.0, 12.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(9.0, 6.0, 0.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(9.0, 6.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(9.0, 6.0, 12.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(9.0, 9.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(9.0, 9.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(9.0, 9.0, 12.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(9.0, 12.0, 0.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(9.0, 12.0, 9.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(9.0, 12.0, 12.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(12.0, 0.0, 0.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(12.0, 3.0, 0.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(12.0, 3.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(12.0, 6.0, 0.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(12.0, 6.0, 3.0))
mdb.models['Model-4'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(12.0, 12.0, 0.0))
mdb.models['Model-4'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-4'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-4'].parts['Merge-2']
mdb.models['Model-4'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-4'].parts['Merge-3']
mdb.models['Model-4'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-4'].parts['Merge-4']
mdb.models['Model-4'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-4'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-4'].parts['Merge-5']
mdb.models['Model-4'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-4'].parts['Merge-1'].generateMesh()
mdb.models['Model-4'].Material(name='Material-1')
mdb.models['Model-4'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-4'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-4'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-4'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-4'].rootAssembly.regenerate()
mdb.models['Model-4'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-4'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-4'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-4'].rootAssembly.referencePoints[88], ))
mdb.models['Model-4'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-4'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-4'].rootAssembly.referencePoints[90], ))
mdb.models['Model-4'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-4'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-4'].rootAssembly.referencePoints[92], ))
mdb.models['Model-4'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-4'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-4'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-4'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-4'].ContactProperty('IntProp-1')
mdb.models['Model-4'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-4'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #fff ]', ), ))
mdb.models['Model-4'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-4'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-4'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #20000000 #889 #10 #21040000 #84 ]', ), ))
mdb.models['Model-4'].rootAssembly.Set(faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #20000000 #889 #10 #21040000 #84 ]', ), ), name='FY')
mdb.models['Model-4'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #44000000 #82108 ]', ), ))
mdb.models['Model-4'].rootAssembly.Set(faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #44000000 #82108 ]', ), ), name='FX')
mdb.models['Model-4'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #40000010 #8040000 #2 #8000000 ]', ), ))
mdb.models['Model-4'].rootAssembly.Set(faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #40000010 #8040000 #2 #8000000 ]', ), ), name='FZ')
mdb.models['Model-4'].rootAssembly.Set(faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), ), name='FX0')
mdb.models['Model-4'].rootAssembly.Set(faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#1000404 #0:3 #4000 ]', ), ), name='FY0')
mdb.models['Model-4'].rootAssembly.Set(faces=
    mdb.models['Model-4'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #4000 #800040 #410401 ]', ), ), name='FZ0')
mdb.models['Model-4'].Coupling(controlPoint=
    mdb.models['Model-4'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-4'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-4'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-4'].rootAssembly.sets['FY0'])
mdb.models['Model-4'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-4'].rootAssembly.sets['FZ0'])
mdb.models['Model-4'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-4'].rootAssembly.sets['FX0'])
mdb.models['Model-4'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-4'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-4', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-4', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-4'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-4'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-5')
del mdb.models['Model-4']
del mdb.jobs['Job-1-4']
mdb.models['Model-5'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-5'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-5'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-5'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-5'].sketches['__profile__'])
del mdb.models['Model-5'].sketches['__profile__']
mdb.models['Model-5'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-5'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-5'].parts['Part-1'])
mdb.models['Model-5'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=35, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 3.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(3.0, 0.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(3.0, 0.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(3.0, 3.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(3.0, 3.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(3.0, 6.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(3.0, 6.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(6.0, 0.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(6.0, 3.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(6.0, 6.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(6.0, 9.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(9.0, 0.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(9.0, 3.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(9.0, 6.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(9.0, 9.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(9.0, 9.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(9.0, 12.0, 0.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(12.0, 0.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(12.0, 0.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(12.0, 3.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(12.0, 3.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(12.0, 6.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(12.0, 6.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(12.0, 6.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(12.0, 9.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(12.0, 9.0, 9.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(12.0, 9.0, 12.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-5'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-5'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-5'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-5'].parts['Merge-2']
mdb.models['Model-5'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-5'].parts['Merge-3']
mdb.models['Model-5'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-5'].parts['Merge-4']
mdb.models['Model-5'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-5'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-5'].parts['Merge-5']
mdb.models['Model-5'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-5'].parts['Merge-1'].generateMesh()
mdb.models['Model-5'].Material(name='Material-1')
mdb.models['Model-5'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-5'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-5'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-5'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-5'].rootAssembly.regenerate()
mdb.models['Model-5'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-5'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-5'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-5'].rootAssembly.referencePoints[82], ))
mdb.models['Model-5'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-5'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-5'].rootAssembly.referencePoints[84], ))
mdb.models['Model-5'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-5'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-5'].rootAssembly.referencePoints[86], ))
mdb.models['Model-5'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-5'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-5'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-5'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-5'].ContactProperty('IntProp-1')
mdb.models['Model-5'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-5'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:4 #3fffffff ]', ), ))
mdb.models['Model-5'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-5'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-5'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #20000000 #21 #10000000 #2 ]', ), ))
mdb.models['Model-5'].rootAssembly.Set(faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #20000000 #21 #10000000 #2 ]', ), ), name='FY')
mdb.models['Model-5'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #90000000 #20842108 #4208884 ]', ), ))
mdb.models['Model-5'].rootAssembly.Set(faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #90000000 #20842108 #4208884 ]', ), ), name='FX')
mdb.models['Model-5'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8020104 #100000 #0 #40000400 #800100 ]', ), ))
mdb.models['Model-5'].rootAssembly.Set(faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8020104 #100000 #0 #40000400 #800100 ]', ), ), name='FZ')
mdb.models['Model-5'].rootAssembly.Set(faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#800001 ]', ), ), name='FX0')
mdb.models['Model-5'].rootAssembly.Set(faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#20110002 #2000002 #0 #1084200 ]', ), ), name='FY0')
mdb.models['Model-5'].rootAssembly.Set(faces=
    mdb.models['Model-5'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), ), name='FZ0')
mdb.models['Model-5'].Coupling(controlPoint=
    mdb.models['Model-5'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-5'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-5'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-5'].rootAssembly.sets['FY0'])
mdb.models['Model-5'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-5'].rootAssembly.sets['FZ0'])
mdb.models['Model-5'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-5'].rootAssembly.sets['FX0'])
mdb.models['Model-5'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-5'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-5', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-5', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-5'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-5'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-6')
del mdb.models['Model-5']
del mdb.jobs['Job-1-5']
mdb.models['Model-6'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-6'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-6'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-6'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-6'].sketches['__profile__'])
del mdb.models['Model-6'].sketches['__profile__']
mdb.models['Model-6'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-6'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-6'].parts['Part-1'])
mdb.models['Model-6'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=40, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 3.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 6.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 6.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(0.0, 9.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(0.0, 9.0, 9.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(0.0, 12.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(0.0, 12.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(0.0, 12.0, 9.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(3.0, 0.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(3.0, 0.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(3.0, 0.0, 9.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(3.0, 0.0, 12.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(3.0, 3.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(3.0, 3.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(3.0, 6.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(3.0, 6.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(3.0, 9.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(3.0, 9.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(3.0, 12.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(3.0, 12.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(6.0, 0.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(6.0, 0.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(6.0, 0.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(6.0, 0.0, 9.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(6.0, 3.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(6.0, 6.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(6.0, 6.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(6.0, 9.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(6.0, 9.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(6.0, 9.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(6.0, 12.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(9.0, 9.0, 0.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-39-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-6'].rootAssembly.translate(instanceList=('Part-1-lin-40-1', )
    , vector=(12.0, 0.0, 9.0))
mdb.models['Model-6'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-6'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-6'].parts['Merge-2']
mdb.models['Model-6'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-6'].parts['Merge-3']
mdb.models['Model-6'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-6'].parts['Merge-4']
mdb.models['Model-6'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-39-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Part-1-lin-40-1'], 
    mdb.models['Model-6'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-6'].parts['Merge-5']
mdb.models['Model-6'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-6'].parts['Merge-1'].generateMesh()
mdb.models['Model-6'].Material(name='Material-1')
mdb.models['Model-6'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-6'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-6'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-6'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-6'].rootAssembly.regenerate()
mdb.models['Model-6'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-6'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-6'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-6'].rootAssembly.referencePoints[92], ))
mdb.models['Model-6'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-6'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-6'].rootAssembly.referencePoints[94], ))
mdb.models['Model-6'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-6'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-6'].rootAssembly.referencePoints[96], ))
mdb.models['Model-6'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-6'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-6'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-6'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-6'].ContactProperty('IntProp-1')
mdb.models['Model-6'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-6'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #3fffff ]', ), ))
mdb.models['Model-6'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-6'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-6'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10 #8000000 #48001 #0:2 #21080 ]', ), ))
mdb.models['Model-6'].rootAssembly.Set(faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10 #8000000 #48001 #0:2 #21080 ]', ), ), name='FY')
mdb.models['Model-6'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:4 #422000 ]', ), ))
mdb.models['Model-6'].rootAssembly.Set(faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:4 #422000 ]', ), ), name='FX')
mdb.models['Model-6'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), ))
mdb.models['Model-6'].rootAssembly.Set(faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), ), name='FZ')
mdb.models['Model-6'].rootAssembly.Set(faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10884889 #84000000 ]', ), ), name='FX0')
mdb.models['Model-6'].rootAssembly.Set(faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#40000002 #888800 #900 #0 #20844110 ]', ), ), name='FY0')
mdb.models['Model-6'].rootAssembly.Set(faces=
    mdb.models['Model-6'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #80 #202000 #4010040 #1 #200020 ]', ), ), name='FZ0')
mdb.models['Model-6'].Coupling(controlPoint=
    mdb.models['Model-6'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-6'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-6'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-6'].rootAssembly.sets['FY0'])
mdb.models['Model-6'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-6'].rootAssembly.sets['FZ0'])
mdb.models['Model-6'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-6'].rootAssembly.sets['FX0'])
mdb.models['Model-6'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-6'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-6', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-6', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-6'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-6'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-7')
del mdb.models['Model-6']
del mdb.jobs['Job-1-6']
mdb.models['Model-7'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-7'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-7'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-7'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-7'].sketches['__profile__'])
del mdb.models['Model-7'].sketches['__profile__']
mdb.models['Model-7'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-7'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-7'].parts['Part-1'])
mdb.models['Model-7'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=40, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 0.0, 9.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 3.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 6.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(0.0, 6.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(0.0, 6.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(0.0, 9.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(0.0, 9.0, 9.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(0.0, 12.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(0.0, 12.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(0.0, 12.0, 9.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(0.0, 12.0, 12.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(3.0, 0.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(3.0, 0.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(3.0, 3.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(3.0, 3.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(3.0, 6.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(3.0, 6.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(3.0, 9.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(3.0, 12.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(3.0, 12.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(6.0, 0.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(6.0, 6.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(6.0, 6.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(6.0, 9.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(6.0, 12.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(6.0, 12.0, 12.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(9.0, 9.0, 0.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(9.0, 12.0, 9.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(9.0, 12.0, 12.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-39-1', )
    , vector=(12.0, 12.0, 9.0))
mdb.models['Model-7'].rootAssembly.translate(instanceList=('Part-1-lin-40-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-7'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-7'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-7'].parts['Merge-2']
mdb.models['Model-7'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-7'].parts['Merge-3']
mdb.models['Model-7'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-7'].parts['Merge-4']
mdb.models['Model-7'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-39-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Part-1-lin-40-1'], 
    mdb.models['Model-7'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-7'].parts['Merge-5']
mdb.models['Model-7'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-7'].parts['Merge-1'].generateMesh()
mdb.models['Model-7'].Material(name='Material-1')
mdb.models['Model-7'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-7'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-7'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-7'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-7'].rootAssembly.regenerate()
mdb.models['Model-7'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-7'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-7'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-7'].rootAssembly.referencePoints[92], ))
mdb.models['Model-7'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-7'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-7'].rootAssembly.referencePoints[94], ))
mdb.models['Model-7'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-7'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-7'].rootAssembly.referencePoints[96], ))
mdb.models['Model-7'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-7'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-7'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-7'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-7'].ContactProperty('IntProp-1')
mdb.models['Model-7'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-7'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #fffffff ]', ), ))
mdb.models['Model-7'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-7'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-7'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#2 #44200000 #4400008 #88000000 #80000010 #842088 ]', ), ))
mdb.models['Model-7'].rootAssembly.Set(faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#2 #44200000 #4400008 #88000000 #80000010 #842088 ]', ), ), name=
    'FY')
mdb.models['Model-7'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:4 #8400000 #111 ]', ), ))
mdb.models['Model-7'].rootAssembly.Set(faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:4 #8400000 #111 ]', ), ), name='FX')
mdb.models['Model-7'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8 #1000000 #0:3 #10004 ]', ), ))
mdb.models['Model-7'].rootAssembly.Set(faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#8 #1000000 #0:3 #10004 ]', ), ), name='FZ')
mdb.models['Model-7'].rootAssembly.Set(faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#21090920 #22100004 #84 ]', ), ), name='FX0')
mdb.models['Model-7'].rootAssembly.Set(faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#40 #22011 #40000:2 #10800000 ]', ), ), name='FY0')
mdb.models['Model-7'].rootAssembly.Set(faces=
    mdb.models['Model-7'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#800000 #400 #10008000 #2000201 #2080 ]', ), ), name='FZ0')
mdb.models['Model-7'].Coupling(controlPoint=
    mdb.models['Model-7'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-7'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-7'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-7'].rootAssembly.sets['FY0'])
mdb.models['Model-7'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-7'].rootAssembly.sets['FZ0'])
mdb.models['Model-7'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-7'].rootAssembly.sets['FX0'])
mdb.models['Model-7'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-7'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-7', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-7', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-7'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-7'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-8')
del mdb.models['Model-7']
del mdb.jobs['Job-1-7']
mdb.models['Model-8'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-8'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-8'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-8'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-8'].sketches['__profile__'])
del mdb.models['Model-8'].sketches['__profile__']
mdb.models['Model-8'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-8'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-8'].parts['Part-1'])
mdb.models['Model-8'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=34, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 0.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 0.0, 12.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 3.0, 12.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(0.0, 9.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(0.0, 12.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(3.0, 0.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(3.0, 0.0, 9.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(3.0, 0.0, 12.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(3.0, 3.0, 9.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(3.0, 3.0, 12.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(3.0, 6.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(3.0, 6.0, 9.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(3.0, 9.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(3.0, 9.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(3.0, 12.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(6.0, 9.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(9.0, 0.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(9.0, 3.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(9.0, 9.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(9.0, 9.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(9.0, 12.0, 0.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(12.0, 3.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(12.0, 3.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(12.0, 6.0, 0.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(12.0, 6.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(12.0, 9.0, 0.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(12.0, 9.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(12.0, 9.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(12.0, 12.0, 0.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(12.0, 12.0, 3.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(12.0, 12.0, 6.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(12.0, 12.0, 9.0))
mdb.models['Model-8'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-8'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-8'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-8'].parts['Merge-2']
mdb.models['Model-8'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-8'].parts['Merge-3']
mdb.models['Model-8'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-8'].parts['Merge-4']
mdb.models['Model-8'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-8'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-8'].parts['Merge-5']
mdb.models['Model-8'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-8'].parts['Merge-1'].generateMesh()
mdb.models['Model-8'].Material(name='Material-1')
mdb.models['Model-8'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-8'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-8'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-8'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-8'].rootAssembly.regenerate()
mdb.models['Model-8'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-8'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-8'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-8'].rootAssembly.referencePoints[80], ))
mdb.models['Model-8'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-8'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-8'].rootAssembly.referencePoints[82], ))
mdb.models['Model-8'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-8'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-8'].rootAssembly.referencePoints[84], ))
mdb.models['Model-8'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-8'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-8'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-8'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-8'].ContactProperty('IntProp-1')
mdb.models['Model-8'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-8'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #3 ]', ), ))
mdb.models['Model-8'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-8'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-8'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#2 #40000000 #24000 #21080000 #22 ]', ), ))
mdb.models['Model-8'].rootAssembly.Set(faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#2 #40000000 #24000 #21080000 #22 ]', ), ), name='FY')
mdb.models['Model-8'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #42104400 #42110844 ]', ), ))
mdb.models['Model-8'].rootAssembly.Set(faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #42104400 #42110844 ]', ), ), name='FX')
mdb.models['Model-8'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10800 #40100 #0 #400000 ]', ), ))
mdb.models['Model-8'].rootAssembly.Set(faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#10800 #40100 #0 #400000 ]', ), ), name='FZ')
mdb.models['Model-8'].rootAssembly.Set(faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#42211 ]', ), ), name='FX0')
mdb.models['Model-8'].rootAssembly.Set(faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#4108000 #420000 #0 #20 ]', ), ), name='FY0')
mdb.models['Model-8'].rootAssembly.Set(faces=
    mdb.models['Model-8'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:2 #100000 #0 #400100 #2 ]', ), ), name='FZ0')
mdb.models['Model-8'].Coupling(controlPoint=
    mdb.models['Model-8'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-8'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-8'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-8'].rootAssembly.sets['FY0'])
mdb.models['Model-8'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-8'].rootAssembly.sets['FZ0'])
mdb.models['Model-8'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-8'].rootAssembly.sets['FX0'])
mdb.models['Model-8'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-8'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-8', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-8', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-8'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-8'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-9')
del mdb.models['Model-8']
del mdb.jobs['Job-1-8']
mdb.models['Model-9'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-9'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-9'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-9'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-9'].sketches['__profile__'])
del mdb.models['Model-9'].sketches['__profile__']
mdb.models['Model-9'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-9'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-9'].parts['Part-1'])
mdb.models['Model-9'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=39, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1', ), vector=
    (0.0, 12.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', ), 
    vector=(0.0, 12.0, 6.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', ), 
    vector=(0.0, 12.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', ), 
    vector=(3.0, 0.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', ), 
    vector=(3.0, 12.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', ), 
    vector=(3.0, 12.0, 6.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', ), 
    vector=(3.0, 12.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', ), 
    vector=(3.0, 12.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', ), 
    vector=(6.0, 0.0, 0.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', )
    , vector=(6.0, 0.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', )
    , vector=(6.0, 6.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', )
    , vector=(6.0, 6.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', )
    , vector=(6.0, 9.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', )
    , vector=(6.0, 12.0, 0.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', )
    , vector=(6.0, 12.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', )
    , vector=(6.0, 12.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', )
    , vector=(6.0, 12.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', )
    , vector=(9.0, 0.0, 0.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', )
    , vector=(9.0, 0.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', )
    , vector=(9.0, 3.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', )
    , vector=(9.0, 6.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', )
    , vector=(9.0, 6.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', )
    , vector=(9.0, 9.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', )
    , vector=(9.0, 9.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', )
    , vector=(9.0, 12.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', )
    , vector=(9.0, 12.0, 6.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', )
    , vector=(9.0, 12.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', )
    , vector=(9.0, 12.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', )
    , vector=(12.0, 0.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', )
    , vector=(12.0, 0.0, 6.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', )
    , vector=(12.0, 0.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', )
    , vector=(12.0, 3.0, 6.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', )
    , vector=(12.0, 3.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', )
    , vector=(12.0, 3.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', )
    , vector=(12.0, 6.0, 9.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', )
    , vector=(12.0, 6.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', )
    , vector=(12.0, 9.0, 12.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', )
    , vector=(12.0, 12.0, 3.0))
mdb.models['Model-9'].rootAssembly.translate(instanceList=('Part-1-lin-39-1', )
    , vector=(12.0, 12.0, 12.0))
mdb.models['Model-9'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1']], keepIntersections=
    ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-9'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-9'].parts['Merge-2']
mdb.models['Model-9'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-9'].parts['Merge-3']
mdb.models['Model-9'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-9'].parts['Merge-4']
mdb.models['Model-9'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Part-1-lin-39-1'], 
    mdb.models['Model-9'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-9'].parts['Merge-5']
mdb.models['Model-9'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-9'].parts['Merge-1'].generateMesh()
mdb.models['Model-9'].Material(name='Material-1')
mdb.models['Model-9'].materials['Material-1'].Elastic(table=((1500, 1200, 1500, 
    0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-9'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-9'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-9'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-9'].rootAssembly.regenerate()
mdb.models['Model-9'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000, 
    minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-9'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-9'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-9'].rootAssembly.referencePoints[90], ))
mdb.models['Model-9'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-9'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-9'].rootAssembly.referencePoints[92], ))
mdb.models['Model-9'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-9'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-9'].rootAssembly.referencePoints[94], ))
mdb.models['Model-9'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-9'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-9'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-9'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-9'].ContactProperty('IntProp-1')
mdb.models['Model-9'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-9'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #1fffff ]', ), ))
mdb.models['Model-9'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-9'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-9'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#a2000000 #108210 #84220020 #40000844 #10 ]', ), ))
mdb.models['Model-9'].rootAssembly.Set(faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#a2000000 #108210 #84220020 #40000844 #10 ]', ), ), name='FY')
mdb.models['Model-9'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #80000000 #11088420 #21082 ]', ), ))
mdb.models['Model-9'].rootAssembly.Set(faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #80000000 #11088420 #21082 ]', ), ), name='FX')
mdb.models['Model-9'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #42020000 #84080 #8020001 #2010840 #8 ]', ), ))
mdb.models['Model-9'].rootAssembly.Set(faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0 #42020000 #84080 #8020001 #2010840 #8 ]', ), ), name='FZ')
mdb.models['Model-9'].rootAssembly.Set(faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#1000000 #4100 ]', ), ), name='FX0')
mdb.models['Model-9'].rootAssembly.Set(faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#210884 #0:4 #42004 ]', ), ), name='FY0')
mdb.models['Model-9'].rootAssembly.Set(faces=
    mdb.models['Model-9'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#802000 #800000 ]', ), ), name='FZ0')
mdb.models['Model-9'].Coupling(controlPoint=
    mdb.models['Model-9'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-9'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-9'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-9'].rootAssembly.sets['FY0'])
mdb.models['Model-9'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-9'].rootAssembly.sets['FZ0'])
mdb.models['Model-9'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-9'].rootAssembly.sets['FX0'])
mdb.models['Model-9'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-9'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-9', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-9', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-9'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-9'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-10')
del mdb.models['Model-9']
del mdb.jobs['Job-1-9']
mdb.models['Model-10'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-10'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.0, 3.0))
mdb.models['Model-10'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-10'].parts['Part-1'].BaseSolidExtrude(depth=3.0, sketch=
    mdb.models['Model-10'].sketches['__profile__'])
del mdb.models['Model-10'].sketches['__profile__']
mdb.models['Model-10'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-10'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-10'].parts['Part-1'])
mdb.models['Model-10'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1', ), number1=39, 
    number2=1, spacing1=0.0, spacing2=0.0)
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1', ), 
    vector=(0.0, 0.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-2-1', )
    , vector=(0.0, 0.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-3-1', )
    , vector=(0.0, 0.0, 12.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-4-1', )
    , vector=(0.0, 3.0, 12.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-5-1', )
    , vector=(0.0, 9.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-6-1', )
    , vector=(0.0, 12.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-7-1', )
    , vector=(3.0, 0.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-8-1', )
    , vector=(3.0, 0.0, 9.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-9-1', )
    , vector=(3.0, 0.0, 12.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-10-1', 
    ), vector=(3.0, 3.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-11-1', 
    ), vector=(3.0, 3.0, 9.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-12-1', 
    ), vector=(3.0, 3.0, 12.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-13-1', 
    ), vector=(3.0, 6.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-14-1', 
    ), vector=(3.0, 6.0, 9.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-15-1', 
    ), vector=(3.0, 9.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-16-1', 
    ), vector=(3.0, 9.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-17-1', 
    ), vector=(3.0, 12.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-18-1', 
    ), vector=(6.0, 0.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-19-1', 
    ), vector=(6.0, 3.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-20-1', 
    ), vector=(6.0, 9.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-21-1', 
    ), vector=(9.0, 0.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-22-1', 
    ), vector=(9.0, 0.0, 9.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-23-1', 
    ), vector=(9.0, 3.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-24-1', 
    ), vector=(9.0, 9.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-25-1', 
    ), vector=(9.0, 9.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-26-1', 
    ), vector=(9.0, 12.0, 0.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-27-1', 
    ), vector=(9.0, 12.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-28-1', 
    ), vector=(9.0, 12.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-29-1', 
    ), vector=(9.0, 12.0, 9.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-30-1', 
    ), vector=(9.0, 12.0, 12.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-31-1', 
    ), vector=(12.0, 3.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-32-1', 
    ), vector=(12.0, 3.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-33-1', 
    ), vector=(12.0, 6.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-34-1', 
    ), vector=(12.0, 9.0, 0.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-35-1', 
    ), vector=(12.0, 9.0, 3.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-36-1', 
    ), vector=(12.0, 9.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-37-1', 
    ), vector=(12.0, 12.0, 0.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-38-1', 
    ), vector=(12.0, 12.0, 6.0))
mdb.models['Model-10'].rootAssembly.translate(instanceList=('Part-1-lin-39-1', 
    ), vector=(12.0, 12.0, 9.0))
mdb.models['Model-10'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-2-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-3-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-4-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-5-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-6-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-7-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1']], 
    keepIntersections=ON, name='Merge-2', originalInstances=SUPPRESS)
mdb.models['Model-10'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=[mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-8-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-9-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-10-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-11-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-12-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-13-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-14-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Merge-2-1']], 
    keepIntersections=ON, name='Merge-3', originalInstances=SUPPRESS)
del mdb.models['Model-10'].parts['Merge-2']
mdb.models['Model-10'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=
    [mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-15-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-16-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-17-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-18-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-19-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-20-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-21-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Merge-3-1']], 
    keepIntersections=ON, name='Merge-4', originalInstances=SUPPRESS)
del mdb.models['Model-10'].parts['Merge-3']
mdb.models['Model-10'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=
    [mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-22-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-23-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-24-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-25-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-26-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-27-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-28-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Merge-4-1']], 
    keepIntersections=ON, name='Merge-5', originalInstances=SUPPRESS)
del mdb.models['Model-10'].parts['Merge-4']
mdb.models['Model-10'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=
    [mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-29-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-30-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-31-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-32-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-33-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-34-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-35-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-36-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-37-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-38-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Part-1-lin-39-1'], 
    mdb.models['Model-10'].rootAssembly.instances['Merge-5-1']], 
    keepIntersections=ON, name='Merge-1', originalInstances=SUPPRESS)
del mdb.models['Model-10'].parts['Merge-5']
mdb.models['Model-10'].parts['Merge-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.9, size=3.0)
mdb.models['Model-10'].parts['Merge-1'].generateMesh()
mdb.models['Model-10'].Material(name='Material-1')
mdb.models['Model-10'].materials['Material-1'].Elastic(table=((1500, 1200, 
    1500, 0.35, 0.35, 0.35, 450, 550, 450), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-10'].HomogeneousSolidSection(material='Material-1', name=
    'Section-1', thickness=None)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#0 #8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#800 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20000 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#20 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#40 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#2 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#4 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#8 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#10 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#80 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#100 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#200 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].parts['Merge-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), sectionName='Section-1', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-10'].parts['Merge-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-10'].parts['Merge-1'].cells.getSequenceFromMask(
    mask=('[#400 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-10'].rootAssembly.regenerate()
mdb.models['Model-10'].StaticStep(initialInc=0.001, maxInc=0.1, maxNumInc=10000
    , minInc=1e-12, name='Step-1', previous='Initial')
mdb.models['Model-10'].rootAssembly.ReferencePoint(point=(7.5, 16.5, 7.5))
mdb.models['Model-10'].rootAssembly.Set(name='RP2', referencePoints=(
    mdb.models['Model-10'].rootAssembly.referencePoints[90], ))
mdb.models['Model-10'].rootAssembly.ReferencePoint(point=(16.5, 7.5, 7.5))
mdb.models['Model-10'].rootAssembly.Set(name='RP1', referencePoints=(
    mdb.models['Model-10'].rootAssembly.referencePoints[92], ))
mdb.models['Model-10'].rootAssembly.ReferencePoint(point=(7.5, 7.5, 16.5))
mdb.models['Model-10'].rootAssembly.Set(name='RP3', referencePoints=(
    mdb.models['Model-10'].rootAssembly.referencePoints[94], ))
mdb.models['Model-10'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'U', 'RF', 'IVOL', 'MISESMAX'))
mdb.models['Model-10'].HistoryOutputRequest(createStepName='Step-1', name=
    'RP2_H-Output', rebar=EXCLUDE, region=
    mdb.models['Model-10'].rootAssembly.sets['RP2'], sectionPoints=DEFAULT, 
    variables=('U1', 'U2', 'U3', 'RF1', 'RF2', 'RF3', 'ALLIE'))
mdb.models['Model-10'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    1.0)
mdb.models['Model-10'].ContactProperty('IntProp-1')
mdb.models['Model-10'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-10'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff:5 #7fffff ]', ), ))
mdb.models['Model-10'].SelfContactStd(contactTracking=ONE_CONFIG, 
    createStepName='Step-1', interactionProperty='IntProp-1', name='Int-1', 
    surface=mdb.models['Model-10'].rootAssembly.surfaces['Surf-1'], thickness=
    ON)
mdb.models['Model-10'].rootAssembly.Surface(name='FY', side1Faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#800000 #0 #20000 #8000008a #1080210 ]', ), ))
mdb.models['Model-10'].rootAssembly.Set(faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#800000 #0 #20000 #8000008a #1080210 ]', ), ), name='FY')
mdb.models['Model-10'].rootAssembly.Surface(name='FX', side1Faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:4 #80008421 #84208 ]', ), ))
mdb.models['Model-10'].rootAssembly.Set(faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:4 #80008421 #84208 ]', ), ), name='FX')
mdb.models['Model-10'].rootAssembly.Surface(name='FZ', side1Faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#84 #1000400 #0:2 #400000 ]', ), ))
mdb.models['Model-10'].rootAssembly.Set(faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#84 #1000400 #0:2 #400000 ]', ), ), name='FZ')
mdb.models['Model-10'].rootAssembly.Set(faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#4410211 ]', ), ), name='FX0')
mdb.models['Model-10'].rootAssembly.Set(faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#85040 #10800000 #201 #10000000 ]', ), ), name='FY0')
mdb.models['Model-10'].rootAssembly.Set(faces=
    mdb.models['Model-10'].rootAssembly.instances['Merge-1-1'].faces.getSequenceFromMask(
    mask=('[#0:3 #400 #1000 #40 ]', ), ), name='FZ0')
mdb.models['Model-10'].Coupling(controlPoint=
    mdb.models['Model-10'].rootAssembly.sets['RP2'], couplingType=KINEMATIC, 
    influenceRadius=WHOLE_SURFACE, localCsys=None, name='Constraint-1', 
    surface=mdb.models['Model-10'].rootAssembly.surfaces['FY'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-10'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-10'].rootAssembly.sets['FY0'])
mdb.models['Model-10'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-10'].rootAssembly.sets['FZ0'])
mdb.models['Model-10'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-10'].rootAssembly.sets['FX0'])
mdb.models['Model-10'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-10'].rootAssembly.sets['RP2'], u1=0, u2=
    -0.075, u3=0, ur1=0, ur2=0, ur3=0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-10', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1-10', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1-10'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1-10'].waitForCompletion()
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-11')
del mdb.models['Model-10']
del mdb.jobs['Job-1-10']
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-1')
del mdb.models['Model-11']
